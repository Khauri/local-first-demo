import { perform } from '../../actions';

static const menus = [
  {
    name: 'Breakfast',
    products: [
      {
        name: 'Orange Juice',
        price: 2000,
      },
      {
        name: 'Pancakes',
        price: 50000,
      },
      {
        name: 'Bacon',
        price: 30000,
      }
    ]
  },
  {
    name: 'Lunch',
    products: [
      {
        name: 'Burger',
        price: 20000,
      },
      {
        name: 'Fries',
        price: 10000,
      },
      {
        name: 'Soda',
        price: 5000,
      }
    ]
  },
  {
    name: 'Dinner',
    products: [
      {
        name: 'Steak',
        price: 40000,
      },
      {
        name: 'Salad',
        price: 15000,
      },
      {
        name: 'Wine',
        price: 20000,
      }
    ]
  }
];

<lifecycle
  onMount() {
    perform({type: 'listTabs', oid: 'all'});
  }
/>

<let/selectedTabId = null />
<let/isViewingMenu = false />
<resource/selectedTab = `Tab:${selectedTabId}` />

<div class="grid grid-cols-main h-full">
  <!-- Tabs List -->
  <div class="bg-gray-300 p-2 pt-3">
    <resource/tabs="listTabs:all" 
      onInvalidate(shouldForward = false) {
        perform({type: 'listTabs', oid: 'all', shouldForward});
      }
    />
    <h1> My Tabs </h1>
    <if=(!tabs)>
      <div> Loading... </div>
    </if>
    <else>
      <const/sorted = tabs.data.toSorted((a, b) => a.created - b.created) />
      <for|tab| of=sorted by=(tab => tab.id)>
        <div class="p-2" onClick(){ 
          selectedTabId = tab.id; 
          isViewingMenu = false;
        }> 
          <p>${tab.tab_name}</p>
          <p>${tab.status}</p>
        </div>
      </for>
      <button class="btn btn-blue" onClick() {
        // This action will also invalidate listTabs, but it may be better to explicitly invalidate it here?
        perform({type: 'createTab', oid: 'createTab'});
      }> 
        Create Tab 
      </button>
    </else>
  </div>
  <!-- Contextual -->
  <div class="p-2 mt-3">
    <if=!selectedTab>
      <p> Select a tab </p>
    </if>
    <else>
      <if=isViewingMenu>
        <h2> Add to ${selectedTab.tab_name} </h2>
        <for|menu| of=menus>
          <div class="p-2"> 
            <h2> ${menu.name} </h2>
            <for|product| of=menu.products>
              <div class="p-2 my-2 border" onClick() {
                perform({type: 'addItemToTab', oid: `add:${selectedTab.id}`, product, quantity: 1, tab: selectedTab.id});
                isViewingMenu = false;
              }> 
                ${product.name} - <money=product.price />
              </div>
            </for> 
          </div>
        </for>
      </if>
      <else>
        <effect() {
            perform({type: 'listTabItems', oid: selectedTab.id, tab: selectedTab.id});
          }
        />
        <resource/items=`listTabItems:${selectedTab.id}` />
        
        <h1> ${selectedTab.tab_name} </h1>
        <p> Status: ${selectedTab.status} </p>
        <p> Balance Due: <money=selectedTab.balance_due /> </p>
        
        <if=items>
          <for|item| of=items.data by=((item) => item.id)>
            <div class="p-2"> 
              ${item.name} - <money=item.price />
              <button class="btn btn-red" onClick(){
                perform({type: 'removeItemFromTab', oid: `remove:${item.id}`, item, tab: selectedTab.id})
              }> Delete </button>
            </div>
          </for>
        </if>
        <button class="btn btn-blue" onClick(){
          isViewingMenu = true
        }> 
          Add to Order 
        </button>
      </else>
    </else>
  </div>
</div>

<style>
  .btn {
    @apply font-bold py-2 px-4 rounded;
  }
  .btn-blue {
    @apply bg-blue-500 text-white;
  }
  .btn-red {
    @apply bg-red-500 text-white;
  }
  .btn-red:hover {
    @apply bg-red-700;
  }
  .btn-blue:hover {
    @apply bg-blue-700;
  }
</style>