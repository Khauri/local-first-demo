// This is a standard component that returns a resource whenever it changes
// mobx is a good alternative to use here of course
import {emitter, getResourceByReference} from '../actions.client';

<attrs/{value, onInvalidate} />
<let/resource = getResourceByReference(value) />

<effect() {
  // This is a simple way to listen to changes in the value
  // and update the resource accordingly
  const update = () => { 
    const rsrc = resource = getResourceByReference(value);
    return rsrc;
  }
  emitter.on(value, update);
  if(onInvalidate) {
    emitter.on(`invalidate:${value}`, onInvalidate);
  }
  let initialValue = update();
  if(!initialValue) {
    onInvalidate?.(true);
  }
  return () => {
    emitter.off(value, update);
    emitter.off(`invalidate:${value}`, onInvalidate);
  }
} />

<return = resource />
